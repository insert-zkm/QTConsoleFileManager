@startuml
skinparam classAttributeIconSize 0

class Console {
    + Console()
    + print(QString) : void

    -- slots --
    + printFileState(FileState, File) : void
}

class Logger {
    # m_file : QFile
    -- methods --
    - Logger()
    + get_instance() : Logger&
    + log(QString) : void

    -- slots --
    +log_file_state(FileState, File) : void


}

class File {
    -- fields --
    # m_old_size : qint
    # m_old_existance : bool

    -- methods --
    + File()
    + File(QString)
    + update_and_get_state() : FileState
    + operator==(File) const : bool
}

class FileTracker {
    -- fields --
    # m_files : QVector<Files>
    # timer_id : int
    # console : Console

    -- methods --
    - FileTracker()
    + track_file(QString) : void
    + untrack_file(QString) : void
    + start_tracking(int) const : void
    + stop_tracking() const : void
    + show_tacking_files() const : void
    + check_files() : void

    -- signals --
    + updated(FileState, File) const : void
}

enum State {
    STABLE,
    RESIZED,
    DELETED,
    CREATED,
    RESTORED
}

struct FileState {
    + state : State
    + updated_time : QDateTime
}

File <.. FileState
FileTracker <.. FileState
Logger <.. FileState
Console <.. FileState

@enduml
