@startuml my_proj
skinparam classAttributeIconSize 0
skinparam linetype ortho

left to right direction

class QFileInfo {}
class QObject {}

class Logger<Q_OBJECT> <<Singleton>> {
    # m_file : QFile
    --
    - Logger()
    - ~Logger()

    {static} + get_instance() : Logger&
    + file_log(msg : QString) : void
    + console_log(msg : QString) : void

    -- slots --
    +file_log_file_state(file : File) : void
    +console_log_file_state(file : File) : void
}

class File {
    # m_old_size : qint
    # m_old_existance : bool
    --
    + File(file_path : QString)

    + refresh() : void
    + get_state() : FileState
    + update_and_get_state() : FileState
    + operator==(other : File&) : bool
}

class FileTracker<Q_OBJECT> <<Singleton>> {
    - FileTracker()
    - ~FileTracker()

    {static} + get_instance() : FileTracker&
    + track_file(QString) : void
    + track_file(QVector<QString>) : void
    + untrack_file(QString) : void

    -- slots --
    + check_files() : void

    -- signals --
    + updated(file : File) : void
}

enum State {
    UPTODATE,
    RESIZED,
    DELETED,
    CREATED,
    RESTORED
}

struct FileState {
    + updated_time : QDateTime
}

FileTracker ---> "*" File : "# m_files"

Logger <.. File

FileState *-right- State : "+ state"

File -left-|> QFileInfo
QObject <|-right- FileTracker
QObject <|- Logger

File *--- FileState : "# m_state"
@enduml

